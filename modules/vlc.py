# data set tables for CAVLC
# Based on the document of ITU-T Recommendation H.264 05/2003 edition

import numpy as np

#table 9-5
# 4x16x4 matrix of table of coeff_taken
# [nC][TotalCoeff][TrailingOnes]
# nC varies from 0 ~ 3 according to Table 9-5 on page 159
# table0: 0 <= nC < 2
# table0: 2 <= nC < 4
# table0: 4 <= nC < 8
# table0: 8 <= nC
# Notice: '0b' is the prefix for NaluStreamer.py
coeff_token = np.array([
                        #talbe0
                        [['1'], # row = 0
                         ['000101', '01'],
                         ['00000111', '000100', '001'],
                         ['000000111', '00000110', '0000101', '00011'],
                         # row = 4
                         ['0000000111', '000000110', '00000101', '000011'],
                         ['00000000111', '0000000110', '000000101', '0000100'],
                         ['0000000001111', '00000000110', '0000000101', '00000100'],
                         ['0000000001011', '0000000001110', '00000000101', '000000100'],
                         # row = 8
                         ['0000000001000', '0000000001010', '0000000001101', '0000000100'],
                         ['00000000001111', '00000000001110', '0000000001001', '00000000100'],
                         ['00000000001011', '00000000001010', '00000000001101', '0000000001100'],
                         ['000000000001111', '000000000001110', '00000000001001', '00000000001100'],
                         # row = 12
                         ['000000000001011', '000000000001010', '000000000001101', '00000000001000'],
                         ['0000000000001111', '000000000000001', '000000000001001', '000000000001100'],
                         ['0000000000001011', '0000000000001110', '0000000000001101', '000000000001000'],
                         ['0000000000000111', '0000000000001010', '0000000000001001', '0000000000001100'],
                         # row = 16
                         ['0000000000000100', '0000000000000110', '0000000000000101', '0000000000001000'],
                        ],

                        #talbe1
                        [[0, 3, -1, 0],
                         [0, -1, 1, 0],
                         [1, 0, 0, 0],
                         [0, 0, 0, 0]],
                         
                        ])

#table 9-6
level_prefix = np.array(['1',
                         '01',
                         '001',
                         '0001',
                         '00001',   #4
                         '000001',
                         '0000001',
                         '00000001',
                         '000000001', #8
                         '0000000001',
                         '00000000001',
                         '000000000001',
                         '0000000000001', #12
                         '00000000000001', 
                         '000000000000001',
                         '0000000000000001'])

#talbe 9-7
# [total_zeros][total_coeff]
total_zeros = np.array([['-', '1', '111', '0101', '00011', '0101', '000001', '000001', '000001', '000001', '00001', '0000', '0000', '000', '00', '0'],
                        ['-', '011', '110', '111', '111', '0100', '00001', '00001', '0001', '000000', '00000', '0001', '0001', '001', '01', '1'],
                        ['-', '010', '101', '110', '0101', '0011', '111', '101', '00001', '0001', '001', '001', '01', '1', '1'],
                        ['-', '0011', '100', '101', '0100', '111', '110', '100', '011', '11', '11', '010', '1', '01'],
                        # row 4
                        ['-', '0010', '011', '0100', '110', '110', '101', '011', '11', '10', '10', '1', '001'],
                        ['-', '00011', '0101', '0011', '101', '101', '100', '11', '10', '001', '01', '011'],
                        ['-', '00010', '0100', '100', '100', '100', '011', '010', '010', '01', '0001'],
                        ['-', '000011', '0011', '011', '0011', '011', '010', '0001', '001', '00001'],
                        # row 8
                        ['-', '000010', '0010', '0010', '011', '0010', '0001', '001', '000000'],
                        ['-', '0000011', '00011', '00011', '0010', '00001', '001', '000000'],
                        ['-', '0000010', '00010', '00010', '00010', '0001', '000000'],
                        ['-', '00000011', '000011', '000001', '00001', '00000'],
                        # row 12
                        ['-', '00000010', '000010', '00001', '00000'],
                        ['-', '000000011', '000001', '000000'],
                        ['-', '000000010', '000000'],
                        ['-', '000000001']
                        ])

#table 9-10
# [run_before][zerosLeft]
run_before = np.array([['-', '1', '1', '11', '11', '11', '11', '111'],
                       ['-', '0', '01', '10', '10', '10', '10', '000', '110'],
                       ['-', '-', '00', '01', '01', '011', '001', '101'],
                       ['-', '-', '-', '00', '001', '010', '011', '100'],
                       # row 4
                       ['-', '-', '-', '-', '000', '001', '010', '011'],
                       ['-', '-', '-', '-', '-', '000', '101', '010'],
                       ['-', '-', '-', '-', '-', '-', '100', '001'],
                       ['-', '-', '-', '-', '-', '-', '-', '0001'],
                       # row 8
                       ['-', '-', '-', '-', '-', '-', '-', '00001'],
                       ['-', '-', '-', '-', '-', '-', '-', '000001'],
                       ['-', '-', '-', '-', '-', '-', '-', '0000001'],
                       ['-', '-', '-', '-', '-', '-', '-', '00000001'],
                       # row 12
                       ['-', '-', '-', '-', '-', '-', '-', '000000001'],
                       ['-', '-', '-', '-', '-', '-', '-', '0000000001'],
                       ['-', '-', '-', '-', '-', '-', '-', '00000000001']
                       ])

if __name__ == "__main__":
    print(coeff_token.shape)
    print(coeff_token)
    print(coeff_token[0][0][0])
    print(coeff_token[0][2][1])
    print(coeff_token[0][8][1])
    print(type(coeff_token[0][0][0]))

    print(level_prefix[2])
    print(total_zeros[9][6])

    print(total_zeros[0])
    print(total_zeros[0][0])